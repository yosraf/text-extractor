{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/component/ocr/ocr.component.ts","./src/app/component/ocr/ocr.component.html","./src/app/component/result/result.component.ts","./src/app/component/result/result.component.html","./src/app/service/ocr.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'text-extractor';\n}\n","<div class=\"container\">\n    <app-ocr></app-ocr>\n  </div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { OcrComponent } from './component/ocr/ocr.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ResultComponent } from './component/result/result.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OcrComponent,\n    ResultComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild, ViewContainerRef, ComponentFactoryResolver } from '@angular/core';\nimport { OcrService } from 'src/app/service/ocr.service';\nimport { ResultComponent } from '../result/result.component';\n\n@Component({\n  selector: 'app-ocr',\n  templateUrl: './ocr.component.html',\n  styleUrls: ['./ocr.component.scss']\n})\nexport class OcrComponent implements OnInit {\n  file: File = null;\n  loading = false;\n  text: string;\n  @ViewChild(\"result\", { read: ViewContainerRef })\n  result: ViewContainerRef;\n  constructor(private service: OcrService, private componentFactoryResolver: ComponentFactoryResolver) { }\n\n  ngOnInit(): void {\n  }\n  onChange(event) {\n    this.loading = true;\n    this.file = event.target.files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(this.file);\n    reader.onload = () => {\n      this.service.extractText(reader.result.toString()).subscribe((res: Object) => {\n        this.loading = false;\n        if (res[\"OCRExitCode\"] === 1) {\n          this.text = res['ParsedResults'][0][\"ParsedText\"];\n          let resolver = this.componentFactoryResolver.resolveComponentFactory(ResultComponent);\n          const resultComp = this.result.createComponent(resolver).instance;\n          resultComp.text = this.text;\n          resultComp.data = reader.result.toString();\n        }\n\n      });\n    };\n  }\n\n\n}\n","<div class=\"text-center loader\" *ngIf=\"loading\">\n  <div class=\"spinner-border text-info\" role=\"status\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n</div>\n<div *ngIf=\"!loading\">\n  <h3 class=\"text-info\">Extract text from image</h3>\n  <div class=\"custom-file\">\n    <input type=\"file\" class=\"custom-file-input\" (change)=\"onChange($event)\" accept=\"image/jpeg, image/png\">\n    <label class=\"custom-file-label\">Choose file</label>\n  </div>\n\n</div>\n<div #result class=\"result\">\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-result',\n  templateUrl: './result.component.html',\n  styleUrls: ['./result.component.scss']\n})\nexport class ResultComponent implements OnInit {\n\n  @Input(\"text\")\n  text:string;\n  @Input(\"data\")\n  data:string;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card\">\n    <h5 class=\"card-header\">Extracted text</h5>\n    <img class=\"card-img-top\" [src]=\"data\" >\n    <div class=\"card-body\">\n      <p class=\"card-text\">{{text}}</p>\n    </div>\n  </div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OcrService {\n\n  constructor(private http:HttpClient) { }\n\n  public  extractText(image:string): Observable<Object>{\n    return this.http.post<Object>(environment.baseUrl + 'ocr/convert',image);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl:'http://localhost:8080/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}